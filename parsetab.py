
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDOP ASSIGN BEGIN CMP DO ELSE END FI IDENTIFIER IF LPAREN MULOP NUMBER OD READ RPAREN SEMICOLON THEN WHILE WRITEprogram : BEGIN statementList ENDempty :statementList : statement SEMICOLON statementList\n                     | empty\n    statement : IDENTIFIER ASSIGN expression\n                 | IF relation THEN statementList FI\n                 | IF relation THEN statementList ELSE statementList FI\n                 | WHILE relation DO statementList OD\n                 | WRITE LPAREN expression RPAREN\n    expression : term\n                  | expression ADDOP term\n    term : factor\n            | factor MULOP factor\n    factor : IDENTIFIER\n              | NUMBER\n              | READ\n              | LPAREN expression RPAREN\n    relation : expression CMP expression'
    
_lr_action_items = {'BEGIN':([0,],[2,]),'$end':([1,10,],[0,-1,]),'IDENTIFIER':([2,7,8,11,12,20,22,25,26,27,28,30,40,],[6,17,17,6,17,17,17,6,17,17,17,6,6,]),'IF':([2,11,25,30,40,],[7,7,7,7,7,]),'WHILE':([2,11,25,30,40,],[8,8,8,8,8,]),'WRITE':([2,11,25,30,40,],[9,9,9,9,9,]),'END':([2,3,5,11,23,],[-2,10,-4,-2,-3,]),'SEMICOLON':([4,15,16,17,18,19,24,34,35,36,38,39,41,43,],[11,-10,-12,-14,-15,-16,-5,-11,-13,-17,-9,-6,-8,-7,]),'FI':([5,11,23,25,32,40,42,],[-4,-2,-3,-2,39,-2,43,]),'ELSE':([5,11,23,25,32,],[-4,-2,-3,-2,40,]),'OD':([5,11,23,30,37,],[-4,-2,-3,-2,41,]),'ASSIGN':([6,],[12,]),'NUMBER':([7,8,12,20,22,26,27,28,],[18,18,18,18,18,18,18,18,]),'READ':([7,8,12,20,22,26,27,28,],[19,19,19,19,19,19,19,19,]),'LPAREN':([7,8,9,12,20,22,26,27,28,],[20,20,22,20,20,20,20,20,20,]),'THEN':([13,15,16,17,18,19,33,34,35,36,],[25,-10,-12,-14,-15,-16,-18,-11,-13,-17,]),'CMP':([14,15,16,17,18,19,34,35,36,],[26,-10,-12,-14,-15,-16,-11,-13,-17,]),'ADDOP':([14,15,16,17,18,19,24,29,31,33,34,35,36,],[27,-10,-12,-14,-15,-16,27,27,27,27,-11,-13,-17,]),'RPAREN':([15,16,17,18,19,29,31,34,35,36,],[-10,-12,-14,-15,-16,36,38,-11,-13,-17,]),'DO':([15,16,17,18,19,21,33,34,35,36,],[-10,-12,-14,-15,-16,30,-18,-11,-13,-17,]),'MULOP':([16,17,18,19,36,],[28,-14,-15,-16,-17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statementList':([2,11,25,30,40,],[3,23,32,37,42,]),'statement':([2,11,25,30,40,],[4,4,4,4,4,]),'empty':([2,11,25,30,40,],[5,5,5,5,5,]),'relation':([7,8,],[13,21,]),'expression':([7,8,12,20,22,26,],[14,14,24,29,31,33,]),'term':([7,8,12,20,22,26,27,],[15,15,15,15,15,15,34,]),'factor':([7,8,12,20,22,26,27,28,],[16,16,16,16,16,16,16,35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> BEGIN statementList END','program',3,'p_program','parser.py',10),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',16),
  ('statementList -> statement SEMICOLON statementList','statementList',3,'p_statementList','parser.py',20),
  ('statementList -> empty','statementList',1,'p_statementList','parser.py',21),
  ('statement -> IDENTIFIER ASSIGN expression','statement',3,'p_statement','parser.py',26),
  ('statement -> IF relation THEN statementList FI','statement',5,'p_statement','parser.py',27),
  ('statement -> IF relation THEN statementList ELSE statementList FI','statement',7,'p_statement','parser.py',28),
  ('statement -> WHILE relation DO statementList OD','statement',5,'p_statement','parser.py',29),
  ('statement -> WRITE LPAREN expression RPAREN','statement',4,'p_statement','parser.py',30),
  ('expression -> term','expression',1,'p_expression','parser.py',38),
  ('expression -> expression ADDOP term','expression',3,'p_expression','parser.py',39),
  ('term -> factor','term',1,'p_term','parser.py',44),
  ('term -> factor MULOP factor','term',3,'p_term','parser.py',45),
  ('factor -> IDENTIFIER','factor',1,'p_factor','parser.py',50),
  ('factor -> NUMBER','factor',1,'p_factor','parser.py',51),
  ('factor -> READ','factor',1,'p_factor','parser.py',52),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parser.py',53),
  ('relation -> expression CMP expression','relation',3,'p_relation','parser.py',58),
]
